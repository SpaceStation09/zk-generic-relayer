// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

import {Test} from "forge-std/Test.sol";
import "../src/SignatureVerifier.sol";
import "../src/lib/P256.sol";
import "../src/lib/P256Verifier.sol";

contract sigVerifyTest is Test {
    SignatureVerifier verifier;
    uint[2] pubkey;

    function setUp() public {
        string
            memory xStr = "0xd187ffcf3ebc8958f845e8416637ed26c9e988242826c8e31bf941dd84b3b29c";
        string
            memory yStr = "0x26750a4eaf5985248e4a018812c671f2602a28c3641e25c28e5d193549b1dd90";
        uint x = vm.parseUint(xStr);
        uint y = vm.parseUint(yStr);
        pubkey = [x, y];
        vm.etch(P256.VERIFIER, type(P256Verifier).runtimeCode);
        verifier = new SignatureVerifier(pubkey);
    }

    function testVerifier() public {
        address testAddress = 0x7E5703DdAae595C2f2Cc8c46Da49F2966095ac23;
        string
            memory sigAsString = "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000001700000000000000000000000000000000000000000000000000000000000000019a0887a4b55204dd6031eb1541e8e2d7976ce82da000472387b5b42a38fbff4bbeeb7007d44c4dc1ec9283bbe15059fbdd92c0bb0d9df0689f9361b88a63cfa6000000000000000000000000000000000000000000000000000000000000002549960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97631d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000767b2274797065223a22776562617574686e2e676574222c226368616c6c656e6765223a22666c63443361726c6c634c797a497847326b6e796c6d435672434d222c226f726967696e223a22687474703a2f2f6c6f63616c686f73743a33303030222c2263726f73734f726967696e223a66616c73657d00000000000000000000";
        bytes memory signature = vm.parseBytes(sigAsString);
        bytes memory message = abi.encodePacked(testAddress);
        bool ret = verifier.verifySig(signature, message);
        assertEq(ret, true);
    }
}
